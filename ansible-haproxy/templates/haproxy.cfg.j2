global
        lua-load /etc/haproxy/cors.lua
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon
        nbthread 4
        maxconn {{ ha_max_conn }}

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

#---------------------------------------------------------------------
# admin & stats
#---------------------------------------------------------------------
listen admin
    bind *:10009
    stats enable
    stats auth {{ ha_admin_user }}:{{ ha_admin_pass}}
    stats uri /haproxy
    stats hide-version
    stats refresh 3s

#---------------------------------------------------------------------
#frontend config
#---------------------------------------------------------------------
frontend buster-api
    bind *:80
    bind *:443 ssl  {% for dm in domain_list %} crt /opt/certs/{{ dm.name }}.pem{% if not loop.last %} {% endif %}{% endfor +%}
    redirect scheme https if !{ ssl_fc }
    mode http
    option forwardfor
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    # Fake connection:close, required in this setup.
    option http-server-close
    option http-pretend-keepalive
    http-response set-header Via "HTTP/2.0"

    {% for ac in domain_list -%}
    acl {{ ac.frontend_acl }} hdr(host) -i {{ ac.name }}
    {% endfor %}


    {% for us in domain_list -%}
    use_backend {{ us.backend_name }} if {{ us.frontend_acl }}
    {% endfor %}


{% for be in domain_list %}
backend {{ be.backend_name }}
    mode http
    option forwardfor
    compression algo gzip
    compression type text/html text/plain application/json
    balance roundrobin
    {% for bs in be.backend_servers -%}
    server {{ bs.vm }} {{ bs.ip }}:{{ bs.port }} check fall 3 rise 2 
    {% endfor %}
{% endfor %}



